---
layout: post
title: Hacker Painter Maker
categories: 评论
tags:
- 书评
---
感谢6.18，感谢[京东](http://book.360buy.com/10582495.html)，感谢SJW告诉我，感谢这个图书折上折活动，感谢[豆瓣](http://www.douban.com/people/RickySu/)保存着我200本“[想读的书](http://book.douban.com/people/RickySu/wish)”的书单，感谢阮一峰的翻译，感谢大家的推荐，最终让我读到了这本《[黑客与画家](http://book.douban.com/subject/6021440/)》。

### 关于作者

很早就读过了阮一峰在博客中放出的部分文章，随后也知道 Y Combinator ，但是在读这本书的前言之前，我还真不知道 YC 的创始人就是这本《黑客与画家》的作者 —— Paul Graham 。

作者的经历比较有意思：中学时喜欢写小说，大学主修哲学，研究生在哈佛计算机主公人工智能，博士读到一半时，去艺术系旁听，毕后去欧洲学习绘画，钱花完后回美国一边做程序员赚钱一边追求成为画家的梦想。到开始创业的时候，已经是31岁了。三年后，也就是1998年卖了公司。2005年创办YC，现在已经是硅谷创头响当当的人物了。

如果仅看创业之前的那段经历，我也已经足够佩服他了。我们之中有几个人，能在求学过程中这么大幅度又频繁地转换方向的？我也喜欢绘画，到现在我都不好意思说我在中学的时候还用周末的时间学过一点素描，那个水平实在太臭了；大学的时候对三维艺术又很感兴趣，折腾过一阵子3D Max, Maya, Rhino 之类的，除此之外折腾过的东西还有 Linux，ARM，单排滑轮等等。所有这些都没有继续花时间研究、训练下去，都败于四个字：浅尝辄止。（好吧，安慰自己一下，至少FPGA是折腾过来了）

看看人家，虽然也没听说他有发表小说，在哲学上有什么成就，为AI做出什么贡献，画出了什么名作，不过，我仍然佩服他知道自己不喜欢时又能及时调转方向（这一部分是美国的环境所赐，父母、社会允许也鼓励自主选择），而且能花3-5年研究一个至少曾经自认为感兴趣的方向（没有太快，也没有太晚）。过早过频繁地转换方向，就是我说的浅尝辄止，还没有入门，不足以让这段时间产生足够影响。转换方向晚了，产生了固定思维和对没有太大变化的环境的适应，就没有动力探索其他新的领域了。而这些学习方向的转变，对他的思维和以后的经历都有深刻的影响。

他创业的那段我就不说了，一是我还没在书里看到具体描述，二来我也觉得在Web领域创业成功，与当时的时代大背景密不可分。

### 《黑客与画家》

![](/images/hackers-painters.jpg "hackers-painters-cn")

黑客喜欢优美地解决现实问题。黑客是创造者，就像建筑师和画家，而不是工程师和照相机。黑客解决现实问题，他们不是科学家，也不是数学家。黑客没有期望过自己搞懂“计算理论”，因为那就像让画家搞懂颜料的化学成分，计算机只是解决问题的工具。黑客想设计优美的软件，但是通常公司雇人是希望有人来实现一个已经定义好的软件。那么如何才能做自己喜欢的事情？黑客们常用的方法是找一份白天的工作糊口，用业余时间来做真正的黑客工作。因此，对黑客来说，最好的工作就是创业。

黑客是一个新兴的职业。既然它与画家非常类似，那么有什么是可以从画家身上借鉴学习的呢？

*   实践出真知。要成为画家，你得画；要成为黑客，你得做，得编程。
*   心中有画，上手即画，没有画家是规划完画作然后再誊抄上画布的。心中有程序，上手就写，程序也不是在纸上写完然后再敲到电脑里的。
*   一幅画是逐步完成的；程序是在完成的过程中完善。
*   学习借鉴别人的绘画范例也可以提高自己的技巧；读别人的程序有同样的作用
*   画家用day job糊口；黑客在白天也可以做程序员、工程师
*   一门艺术在出现的前几十年中被推向顶峰，后来之人都活在大师的阴影之中；现在也正是计算机的黄金年代

还有这句话我也有必要摘抄一下，如果只有一句他希望别人能记住的关于编程的，他希望就是这句：

程序写出来是给人看的，附带能在机器上运行而已。

一种好编程语言应该比英语更好理解。只有在那种不太成熟、容易出现问题的地方才应该加上注释，提醒读者注意那里，就好像公路上只有急转弯处才会出现警示标志一样。

### Maker

看完《黑客与画家》，让我感觉好想成为一名黑客，这种感觉不亚于曾经我的班主任说她儿子看完《中华小当家》就梦想成为一名厨师。

其实我现在，我相信也不只是我，还有很多人，我们都看到生活中的许多Gap，我们都想象生活中如果xx是xx的样子就好了。但是我们不会去做。当xx真的变成xx的样子，我们就说，看，这点子我当年也想到过。是的，区别只是，我们没有去做而已。还是不指望自己某一天伟大到成为Hacker了，做做Maker就好，如果能动手把一件自己想到的可以完善的事情做出来，我就已经很高兴了。

### Yak Shaving

在美国有一本杂志叫 《[Make Magazine](http://www.makezine.com/)》，这是一份 O'Reilly 旗下 （又是O'Reilly？Hackers and Painters 也是）专门报道 Maker 的杂志。可以说，在某种程度上，Maker 就是脱离计算机载体以后更广义的 Hacker 了。在它的创刊号中的第一篇文章，叫做 Yak Shaving。这句估计我们都不懂的行话指的是当你在解决一个问题的过程中，发现另一个问题，而处理那个问题的过程中，又发现另一个问题，如此往复循环嵌套，最终或许你自己都不记得当初要解决什么问题，或者后来发现又要解决一开始那个问题。恩，觉得似曾相识吧？（不仅如此，我还碰到过为了绕过一个Bug，用另一种方法解决问题，又碰到另一个Bug，然后循环往复，那更是不要活了）

可以说这会影响效率，不过，我也同意的一点是，有些人，就是享受着这么解决问题的过程，就像我现在。其实，我本来只是想写几句关于 Yak Shaving 的感想的，不过由于它又关系到 Hacker ，因此又要把前面的故事说了，才有了这篇文章。